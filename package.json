{
  "name": "vscode-react-generator",
  "displayName": "VSReact Generator",
  "description": "Handy shortcuts for building React projects",
  "version": "0.0.1",
  "icon": "images/logo.png",
  "author": {
    "name": "Matt Shirlaw"
  },
  "publisher": "mshirlaw",
  "repository": {
    "type": "git",
    "url": "https://github.com/mshirlaw/vscode-react-generator.git"
  },
  "engines": {
    "vscode": "^1.54.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:vscode-react-generator.createTestFileFromContext",
    "onCommand:vscode-react-generator.createTestFileFromCommandPalette",
    "onCommand:vscode-react-generator.createComponentGroupFromContext"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-react-generator.createTestFileFromContext",
        "title": "VSReact Generator: Create Test"
      },
      {
        "command": "vscode-react-generator.createTestFileFromCommandPalette",
        "title": "VSReact Generator: Create Test"
      },
      {
        "command": "vscode-react-generator.createComponentGroupFromContext",
        "title": "VSReact Generator: Create Component"
      }
    ],
    "configuration": {
      "title": "VSReact Generator",
      "properties": {
        "vscode-react-generator.componentFile.extension": {
          "type": "string",
          "enum": [
            "tsx",
            "jsx"
          ],
          "default": "jsx",
          "description": "Specifies the file extension which will be used when creating React Components",
          "enumDescriptions": [
            "Create React Component using typescript with a .tsx file extension",
            "Create React Components using JSX with a .jsx file extension"
          ]
        },
        "vscode-react-generator.componentGeneration.includeCssModule": {
          "type": "boolean",
          "default": true,
          "description": "Include a CSS module file when generating a Component"
        },
        "vscode-react-generator.componentGeneration.includeTestFile": {
          "type": "boolean",
          "default": true,
          "description": "Include a test file when generating a Component"
        },
        "vscode-react-generator.testFile.suffix": {
          "type": "string",
          "enum": [
            "spec",
            "test"
          ],
          "default": "spec",
          "description": "Specifies the suffix which will be used when creating React test files",
          "enumDescriptions": [
            "Create test files with a 'spec' suffix",
            "Create test files with a 'test' suffix"
          ]
        },
        "vscode-react-generator.testFile.extension": {
          "type": "string",
          "enum": [
            "tsx",
            "ts",
            "jsx",
            "js"
          ],
          "default": "tsx",
          "description": "Specifies the file extension which will be used when creating React test files",
          "enumDescriptions": [
            "Create test files using typescript with a .tsx file extension",
            "Create test files using typescript with a .ts file extension",
            "Create test files using JSX with a .jsx file extension",
            "Create test files using javascript with a .js file extension"
          ]
        }
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-react-generator.createTestFileFromContext",
          "group": "1_modification",
          "when": "false"
        },
        {
          "command": "vscode-react-generator.createTestFileFromCommandPalette",
          "when": "resourceScheme == file && resourceExtname =~ /(\\.js|\\.ts|\\.jsx|\\.tsx)$/"
        },
        {
          "command": "vscode-react-generator.createComponentGroupFromContext",
          "group": "1_modification",
          "when": "false"
        }
      ],
      "explorer/context": [
        {
          "command": "vscode-react-generator.createTestFileFromContext",
          "group": "1_modification",
          "when": "resourceScheme == file && resourceExtname =~ /(\\.js|\\.ts|\\.jsx|\\.tsx)$/"
        },
        {
          "command": "vscode-react-generator.createComponentGroupFromContext",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^17.0.9",
    "@types/sinon": "^9.0.11",
    "@types/vscode": "^1.63.1",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.33.0",
    "eslint": "^7.32.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.0",
    "sinon": "^12.0.1",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "vscode-test": "^1.6.1",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  }
}
